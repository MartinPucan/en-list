{"version":3,"sources":["config/index.js","FetchWords.js","App.js","reportWebVitals.js","index.js"],"names":["Config","process","REACT_WORDS_JSON","FetchWords","useState","data","setData","useEffect","fetch","getWordsJSON","headers","then","response","json","myJson","Table","striped","bordered","hover","map","item","index","english","czech","definition","example","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAUeA,E,iGATX,WACI,OAAOC,wKAAYC,kBAAoB,e,sBAG3C,WACI,MAAOD,Y,YCgDAE,EAlDI,WAAO,IAAD,EAEEC,mBAAS,IAFX,mBAEdC,EAFc,KAETC,EAFS,KAuBrB,OAJAC,qBAAU,WAdNC,MAAM,MAAD,OAAOR,EAAOS,gBACd,CACGC,QAAU,CACN,eAAgB,mBAChB,OAAU,sBAGjBC,MAAK,SAASC,GACX,OAAOA,EAASC,UAEnBF,MAAK,SAASG,GACXR,EAAQQ,QAKlB,IAGE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UAEI,gCACA,+BACI,mCACA,yCACA,uCACA,4CACA,8CAGJ,gCACEb,EAAKc,KAAI,SAACC,EAAMC,GAAP,OACP,+BACI,6BAAKA,EAAQ,IACb,6BAAKD,EAAKE,UACV,6BAAKF,EAAKG,QACV,6BAAKH,EAAKI,aACV,6BAAKJ,EAAKK,sBClCfC,MARf,WACE,OACE,yBAASC,UAAU,MAAnB,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.457352bf.chunk.js","sourcesContent":["class Config {\n    static getWordsJSON() {\n        return process.env.REACT_WORDS_JSON || \"words.json\";\n    }\n\n    static getToken() {\n        return process.env.REACT_APP_TOKEN_NAME || \"token\";\n    }\n}\n\nexport default Config;","import React, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport Config from \"./config\";\n\nconst FetchWords = () => {\n\n    const [data,setData] = useState([]);\n\n    const getData = () => {\n        fetch(`../${Config.getWordsJSON()}`\n            ,{\n                headers : {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            })\n            .then(function(response) {\n                return response.json();\n            })\n            .then(function(myJson) {\n                setData(myJson);\n            })\n    }\n    useEffect(() => {\n        getData()\n    },[])\n\n    return (\n        <Table striped bordered hover>\n        {/*<Table rowKey=\"\" dataSource={data} columns={columns} pagination={{ pageSize: 50 }} />*/}\n            <thead>\n            <tr>\n                <th>#</th>\n                <th>English</th>\n                <th>Czech</th>\n                <th>Definition</th>\n                <th>Example</th>\n            </tr>\n            </thead>\n            <tbody>\n            { data.map((item, index) =>\n                <tr>\n                    <td>{index + 1}</td>\n                    <td>{item.english}</td>\n                    <td>{item.czech}</td>\n                    <td>{item.definition}</td>\n                    <td>{item.example}</td>\n                </tr>\n            )}\n            </tbody>\n        </Table>\n    );\n}\n\nexport default FetchWords;","import './App.css';\nimport './FetchWords';\nimport FetchWords from \"./FetchWords\";\n\nfunction App() {\n  return (\n    <section className=\"App\">\n      <FetchWords />\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}